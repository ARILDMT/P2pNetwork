Создай модуль на JavaScript (React) для приложения “LearnPeer” — это глобальная образовательная платформа. В этом модуле реализуй полностью кастомный календарь, который пользователь может редактировать под себя (добавлять, удалять и изменять события, временные слоты, пометки). Учти такие требования
Календарь должен поддерживать недельный и дневной вид
Пользователь может вручную отмечать временные слоты, когда он свободен или занят.
Можно добавлять события с описанием и типом (учёба, проверка работы, встреча).
Каждое событие можно редактировать и удалять.
Должен быть общий лог всех изменений (история).Функция синхронизации с другим пользователем (пиром)Пользователь может отправить приглашение другому пользователю на синхронизацию календарей.Если пир принимает приглашение, его свободные слоты и события синхронизируются (отображаются как общие блоки с пометкой “Пир”).Оба пользователя могут видеть только те события, где включена опция “Общий доступ”, остальные остаются приватными. Если кто-то вносит изменение в общий слот (например, перенос времени), второму пользователю приходит уведомление (например, в чате или отдельном разделе уведомлений). Любая синхронизация требует взаимного согласия обеих сторон.
Полная адаптивность (десктоп + мобильная версия).

Интерфейс:
Минималистичный, светлая тема с акцентами цвета, выбранного пользователем.
Слева меню с выбором вида (неделя, день).
Вверху кнопка “Синхронизировать с пиром”.
	В календаре цветовые маркеры — свои события одного цвета, события пира другого.
При наведении на событие всплывает описание.
Дополнительные возможности (по желанию): Возможность экспортировать календарь в .ics или .csv.
Поиск по событиям. Напоминания через push-уведомления.
Обязательно:Напиши весь код сразу — с компонентами, стилями, состоянием и функциями синхронизации.
Добавь комментарии к каждому ключевому блоку кода, чтобы мне было понятно, за что он отвечает.Сделай отдельную функцию для подключения к пир-синхронизации и отдельную функцию для обработки входящих обновлений от пиров.